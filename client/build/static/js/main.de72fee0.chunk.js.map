{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["App","state","users","name","age","sex","weight","height","pic","username","password","handleChange","e","target","value","_this","setState","Object","defineProperty","handleClick","axios","post","then","response","user","data","updatedUsers","push","_this2","this","get","react_default","a","createElement","className","href","type","placeholder","onChange","onClick","map","i","style","width","src","alt","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.de72fee0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    users: [],\n    name: \"\",\n    age: \"\",\n    sex: \"\",\n    weight: \"\",\n    height: \"\",\n    pic: \"\",\n    username: \"\",\n    password: \"\"\n  };\n  componentDidMount() {\n    axios.get(\"/api/user\").then(response => {\n      this.setState({ users: response.data });\n    });\n  }\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleClick = () => {\n    axios\n      .post(\"/api/user\", {\n        username: this.state.username,\n        password: this.state.password,\n        name: this.state.name,\n        age: this.state.age,\n        sex: this.state.sex,\n        weight: this.state.weight,\n        height: this.state.height,\n        pic: this.state.pic\n      })\n      .then(response => {\n        const user = response.data;\n        const updatedUsers = this.state.users;\n        updatedUsers.push(user);\n        this.setState({\n          users: updatedUsers\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <nav className=\"nav bg-dark\">\n          <a className=\"nav-link active\" href=\"#\">\n            Active\n          </a>\n          <a className=\"nav-link\" href=\"#\">\n            Link\n          </a>\n          <a className=\"nav-link\" href=\"#\">\n            Link\n          </a>\n        </nav>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"jumbotron\">\n                <h1>be healthy ðŸ¥— </h1>\n              </div>\n\n              <div className=\"row\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  placeholder=\"username\"\n                  value={this.state.username}\n                  onChange={this.handleChange}\n                />\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                />\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  placeholder=\"name\"\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                />\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"age\"\n                  placeholder=\"age\"\n                  value={this.state.age}\n                  onChange={this.handleChange}\n                />\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"sex\"\n                  placeholder=\"sex\"\n                  value={this.state.sex}\n                  onChange={this.handleChange}\n                />\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"weight\"\n                  placeholder=\"weight\"\n                  value={this.state.weight}\n                  onChange={this.handleChange}\n                />\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"height\"\n                  placeholder=\"height\"\n                  value={this.state.height}\n                  onChange={this.handleChange}\n                />\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"pic\"\n                  placeholder=\"pic\"\n                  value={this.state.pic}\n                  onChange={this.handleChange}\n                />\n                <button className=\"btn btn-success\" onClick={this.handleClick}>\n                  Add User\n                </button>\n              </div>\n\n              <div>\n                {this.state.users.map((user, i) => (\n                  <div className=\"card\" style={{ width: \"18rem\" }}>\n                    <img src={user.pic} className=\"card-img-top\" alt=\"...\" />\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">{user.username}</h5>\n                      <p className=\"card-text\">\n                        {user.name + \", \"}\n                        age: {user.age}\n                      </p>\n                      <a href=\"#\" className=\"btn btn-primary\">\n                        Details\n                      </a>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}